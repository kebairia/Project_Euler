#+PROPERTY: header-args :shebang #!/bin/env python :results output :exports both
#+STARTUP:   content showstars indent inlineimages
* eulerlib (project library)
:PROPERTIES:
:header-args: :tangle eulerlib.py
:header-args: :shebang #!/bin/env python
:END:
#+begin_src python 
  def is_prime(x):
      if x == 2:
          return True
      else:
          for i in range(2, x):
              if x%i == 0 :
                  return False
              return True

#+end_src
#+begin_src python
  # we can use lambda function istead
  # is_even = lambda x: x % 2 == 0
  def is_even(x):
      return x % 2 == 0
#+end_src

* Problem 1 - Multiples of 3 or 5
#+name: problem1
#+begin_src python :tangle p001.py
  def is_mul3(x):
      return x%3 == 0
  
  def is_mul5(x):
      return x%5 == 0
  sum = 0
  for i in range(1, 1000):
      if is_mul3(i) or is_mul5(i):
          sum += i
  print("The result is: ", sum)
#+end_src

#+RESULTS: problem1
: The result is:  233168

Another elegant solution
#+begin_src python
  is_mul3 = lambda x: x%3 == 0
  is_mul5 = lambda x: x%5 == 0
  print("Thre result is: ", sum([x for x in range(1,1000) if is_mul3(x) or is_mul5(x)]))
#+end_src

#+RESULTS:
: None

* Problem 2 - Even Fibonacci numbers
#+name: problem2
#+begin_src python :tangle p002.py
  is_even = lambda x: x % 2 == 0
  def fib(limit):
      lst = []
      x, y, ans = 0, 1, 1
      while x <= limit:
          lst.append(ans)
          ans += y
          x, y = y, x + y
      return lst
  print("The result is: ", sum([x for x in fib(4000000) if is_even(x)]))
#+end_src

#+RESULTS: problem2
: The result is:  4613732

* TODO Problem 3 - Largest prime factor
#+name: problem3
#+begin_src python :tangle p003.py 
  from math import *
  import time
  import numpy as np
  
  # def is_prime(x):
  #     if x == 1: 
  #         return False
  #     elif x == 2: 
  #         return True
  #     else:
  #         for i in range(2, x):
  #             if x%i == 0:
  #                 return False
  #     return True
  
  def is_prime(x):
      if x > 1:
          for i in range(2, x):
              if x%i == 0:
                  return False
          return True
      return False
  
  def prime_fact(x):
      lst = []
      for i in range(1, x):
          if is_prime(i) and x%i == 0 :
                  lst.append(i)
                  x = x//i
      lst.append(x)
  
      return (lst)
      print(lst)
  # prime_fact(600851475143)
  
  # start = time.time()
  # print("Main result: ",prime_fact(x))
  # end = time.time()
  # print("time for main is: ", end - start)
  
  start = time.time()
  x = 90
  res = [i for i in range(1, x) if is_prime(i) and x%i == 0]
  res.append(x//np.prod(res))
  print("Test result: ",res)
  end = time.time()
  print("time for test is: ", end - start)
  
#+end_src

#+RESULTS: problem3

